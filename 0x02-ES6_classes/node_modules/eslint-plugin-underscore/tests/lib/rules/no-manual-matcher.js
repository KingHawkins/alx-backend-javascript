/**
 * @fileoverview Use the matcher functionality of Underscore iteratees
 * @author Jordan Eldredge
 * @copyright 2016 Jordan Eldredge. All rights reserved.
 * See LICENSE file in root directory for full license.
 */
"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

var rule = require("../../../lib/rules/no-manual-matcher"),
    RuleTester = require("eslint").RuleTester;


//------------------------------------------------------------------------------
// Tests
//------------------------------------------------------------------------------

var ruleTester = new RuleTester();
ruleTester.run("no-manual-matcher", rule, {

    valid: [
        "_.any(items, {foo: 'bar'});",
        "_.any(items, function(item){ return foo === 'bar'; });",
        "_.any(items, function(item){});",
        "_.any(items, function(item){ return foo === 'bar'; });",
        "_.any(items, function(item){ item.foo === 'bar'; });",
        "_.any(items, function(item){ return item[0] === 'bar'; });",
        "_.any(items, function(item){ return item.foo.bar === 'bar'; });"
    ],

    invalid: [
        {
            code: "_.any(items, function(item){ return item.foo === 'bar'; });",
            errors: [{
                message: "Use Underscore's {key: value} matcher syntax",
            }]
        },
        {
            code: "_.any(items, function(item){ return item.foo === myFunction(); });",
            errors: [{
                message: "Use Underscore's {key: value} matcher syntax",
            }]
        },
        {
            code: "_.any(items, function(item){ return item.foo == 'bar'; });",
            errors: [{
                message: "Use Underscore's {key: value} matcher syntax",
            }]
        },
        {
            code: "_.any(items, function(item){ return 'bar' === item.baz; });",
            errors: [{
                message: "Use Underscore's {key: value} matcher syntax",
            }]
        },
        {
            code: "_.any(items, function(item){ return item.foo === baz.bar.biz; });",
            errors: [{
                message: "Use Underscore's {key: value} matcher syntax",
            }]
        },
        {
            code: "_.find(this.config.searchAssets, function(asset) { return asset.id === selectedAssetId; });",
            errors: [{
                message: "Use Underscore's {key: value} matcher syntax",
            }]
        }
    ]
});
